on:
  push:
    tags:
      - v*
name: Build-Release[Android]

jobs:
  release:
    runs-on: ubuntu-latest
    # 配置环境
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # 下拉仓库
      - name: Check out repository code
        uses: actions/checkout@v3
      # 下载 Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
      # 下载 Java JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "21"
      - name: List files in the repository
        run: |
          echo '' > ${{ secrets.OASX_RELEASE }}
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: flutter --version
      - run: java -version
      # 下载依赖
      - name: Install dependencies
        run: flutter pub get
      # 最新的发布url
      - name: Get latest release
        id: get_release
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.RELEASE_TOKEN }}
          script: |
            const { data: releases } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const latestRelease = releases[0];
            const version = latestRelease.tag_name.replace(/^v/, '') + '+1'
            console.log(JSON.stringify(latestRelease, null, 2));
            core.setOutput('upload_url', latestRelease.upload_url);
            core.setOutput('tag_name', latestRelease.tag_name);
            core.setOutput('version', version);
      # 修改 yaml 版本号
      - name: Update version
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'pubspec.yaml'
          propertyPath: 'version'
          value: ${{ steps.get_release.outputs.version }}
          commitChange: false
      # 构建
      - run: flutter build apk --release
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD}}
      
      # 发布到 Release
      - name: Upload Release Android
        id: upload-release-android 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: oasx_${{ steps.get_release.outputs.tag_name }}_android.apk
          asset_content_type: application/vnd.android.package-archive
